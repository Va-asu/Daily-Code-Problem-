//solution 1

class Solution {
    public int compress(char[] chars) {
    int index=0,indexans=0;
    
    while(index<chars.length)
    {
       char currentchar=chars[index];
       int count=0;
       while(index<chars.length&&chars[index]==currentchar)
       {
           index++;
           count++;
       }
       chars[indexans++]=currentchar;
        
        if(count!=1){
            for(char c:Integer.toString(count).toCharArray())
            {
                chars[indexans++]=c;
            }
        }
    }
    return indexans;
  }
}


//solution 2

class Solution {
    public int compress(char[] chars) {
        int count=0,j=0;
        char ch=chars[0];
        for(int i=0;i<chars.length;i++)
        {
            char c=chars[i];
            if(c==ch)
            {
                count++;
            }else{
               
                chars[j++]=ch;
                ch=c;
               
                if(count!=1)
                {
                    String str=String.valueOf(count);
                    int k=0;
                    while(k<str.length())
                    {
                        chars[j++]=str.charAt(k);
                        k++;
                    }
                }
                count=1;
                
            }
        }
        chars[j++]=ch;
        if(count!=1)
          {
           String str=String.valueOf(count);
           int k=0;
            while(k<str.length())
            {
               chars[j++]=str.charAt(k);
               k++;
            }
        
         }                
        return j;
    }
}
