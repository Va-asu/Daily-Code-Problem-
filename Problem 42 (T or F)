class Solution{
    static Boolean isSubsetSum(int N, int arr[], int sum){
         int[][] dp=new int[N+1][sum+1];
         for(int[] row:dp)
         {
              Arrays.fill(row,-1);
         }
         solve(dp,arr,N,sum);
        
         return dp[N][sum]==1?true:false;
    }
    static void solve(int[][] dp,int[] arr,int n,int sum)
    {
        for(int i=0;i<=sum;i++)
        {
            dp[0][i]=0;
        }
        
        for(int i=0;i<=n;i++)
        {
            dp[i][0]=1;
        }
        
        
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=sum;j++)
            {
                if(arr[i-1]>sum)
                {
                    dp[i][j]=dp[i-1][j];
                }
                else if(arr[i-1]==j)
                {
                    dp[i][j]=1;
                }
                else 
                {
                    int max=0;
                    if(j-arr[i-1]>=0)
                    {
                        max=dp[i-1][j-arr[i-1]];
                    }
                    dp[i][j]=Math.max(max,dp[i-1][j]);
                }
            }
        }
    }
}
